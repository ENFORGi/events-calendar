version: '3.8'

services:
  frontend:
    build:
      context: ./packages/frontend
    ports:
      - "${FRONT_PORT_MAPPING}"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./packages/backend
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "${APP_PORT_MAPPING}"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT_MAPPING}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

volumes:
  pg_data:

networks:
  app-network:
    driver: bridge